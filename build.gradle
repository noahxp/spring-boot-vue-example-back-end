plugins {
    id 'org.springframework.boot' version '2.3.9.RELEASE'
    id 'java'
    id 'war'
    id 'com.google.cloud.tools.jib' version '2.8.0'
}

apply plugin: 'io.spring.dependency-management'

group = 'tw.noah'
version = '1.0.0'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'


    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    // add for spring boot cache usage JSR107-ehcache
    implementation 'org.ehcache:ehcache:3.+'
    implementation 'javax.cache:cache-api:1.+'

    implementation 'org.apache.commons:commons-lang3'

    // spring cloud
    implementation 'org.springframework.cloud:spring-cloud-aws-autoconfigure'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws-messaging'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws-parameter-store-config'


    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    runtime 'mysql:mysql-connector-java'

    implementation group: 'com.h2database', name: 'h2', version: '1.+'

    //swagger2
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.+'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.+'


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// support for spring cloud , https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies
// aws sdk load credentials :  https://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/credentials.html
ext {
    set('springCloudVersion', "Greenwich.RELEASE")
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


ext.gitHash = {
    def p3 = 'git describe --always HEAD'.execute()
    p3.waitFor()
    return p3.text.trim()
}
ext.today = {
    return new Date().format('yyyyMMdd')
}

def Task preJibBuild = task(preJibBuild)
preJibBuild.doLast {
    exec {
        workingDir '.'
        commandLine 'sh', '-c', 'docker build -t="tomcat-alpine-clean:latest" .'
    }
}

// jib configure docs: https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin#extended-usage
jib {
//	from.image = 'tomcat:9-jre8-alpine' // docker image source write in Dockerfile
    from.image = 'docker://tomcat-alpine-clean:latest'

    to {
        image = "billing.cloud/billing:latest"
        tags = [today() + "-" + gitHash()]
    }
    container {
        jvmFlags = ['-XX:-HeapDumpOnOutOfMemoryError', '-Djava.security.egd=file:/dev/./urandom', '-Dserver.port=8080' ,'-Duser.timezone=Asia/Taipei']
        ports = ['8080']
        appRoot = '/usr/local/tomcat/webapps/ROOT'
        creationTime = 'USE_CURRENT_TIMESTAMP'
    }
}

tasks.named('wrapper') {
    distributionType = Wrapper.DistributionType.BIN
    gradleVersion = '6.8.2'
}
